on: [push, pull_request]
name: Build
jobs:
  test-build:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        go-version: [1.15.x]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Test
      run: make test
    - name: Build
      run: make build
    - name: Slack
      uses: k0kubun/action-slack@v2.0.0
      with:
        payload: |
          {
            "attachments": [{
              "text": "${{ job.status }}: ${{ github.workflow }} <https://github.com/${{ github.repository }}/commit/${{ github.sha }}/checks|${{ env.COMMIT_DATE }} #${{ env.COMMIT_NUMBER_OF_DAY }}> " +
                      "(<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|" + "${{ github.sha }}".substring(0, 10) + ">) " +
                      "of ${{ github.repository }}@" + "${{ github.ref }}".split('/').reverse()[0] + " by ${{ github.event.head_commit.committer.name }}",
              "color": "danger"
            }]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: failure() && github.event_name == 'push'
  coverage:
    runs-on: ubuntu-latest
    needs: test-build
    steps:

    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15.x

    - name: Checkout code
      uses: actions/checkout@v1

    - name: send codecov
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: bash <(curl -s https://codecov.io/bash)

    - name: Slack
      uses: k0kubun/action-slack@v2.0.0
      with:
        payload: |
          {
            "attachments": [{
              "text": "${{ job.status }}: ${{ github.workflow }} <https://github.com/${{ github.repository }}/commit/${{ github.sha }}/checks|${{ env.COMMIT_DATE }} #${{ env.COMMIT_NUMBER_OF_DAY }}> " +
                      "(<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|" + "${{ github.sha }}".substring(0, 10) + ">) " +
                      "of ${{ github.repository }}@" + "${{ github.ref }}".split('/').reverse()[0] + " by ${{ github.event.head_commit.committer.name }}",
              "color": "danger"
            }]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: failure() && github.event_name == 'push'

#   - name: Run Unit tests
#     run: |
#       go test -race -covermode atomic -coverprofile=profile.cov ./...
#   - name: Send coverage
#     env:
#       COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#     run: |
#       GO111MODULE=off go get github.com/mattn/goveralls
#       $(go env GOPATH)/bin/goveralls -coverprofile=profile.cov -service=github
